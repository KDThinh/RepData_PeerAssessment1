xyplot(Life.Exp~Income| region, data, c=(4,1))
xyplot(Life.Exp~Income| region data, c=(4,1))
xyplot(Life.Exp~Income | region, data, c=(4,1))
xyplot(Life.Exp~Income | region, data, c(4,1))
xyplot(Life.Exp~Income | region, data, layout=c(4,1))
xyplot(Life.Exp~Income | region, state, layout=c(4,1))
xyplot(Life.Exp~Income | region, state, c(2,2))
xyplot(Life.Exp~Income | region, state, layout=c(2,2))
head(mgp)
head(mqg)
head(mqg)
head(mpg)
dim(mpq)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, data=airquality)
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone (ppb)")
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", cold.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind~Ozone))
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
par()
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, pch="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main="Wind and Ozine in NYC")
title(main="Wind and Ozone in NYC")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality,Month==5)
points(may$wind, may$Ozone,)
points(may$wind, may$Ozone)
points(may$Wind, may$Ozone,)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality, Month!=5)
points(notmay$Wind, notmay$Ozone)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", c(17,8), c("blue","red"),c("May","Other Months"))
legend("topright", pch=c(17,8), color=c("blue","red"), legend=c("May","Other Months"))
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
?mtex
?mtext
mtext("Ozone and Weather in New York City", outer=TRUE)
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red",pch="8", main="Big Apple Data")
xyplot(Ozone~Wind, airquality, col="red",pch=8, main="Big Apple Data")
xyplot(Ozone~Wind| as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind|Month, data=airquality, layout=c(5,1))
p<-xyplot, xyplot(Ozone~Wind, data=airquality)
p<-xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]
p[["formula"]]
p[["x.limits"]]
f
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
?source
source(plot1.R,local=TRUE)
source(pathtofile.R,local=TRUE)
source(pathtofile ="plot1.R",local=TRUE)
pathtofile("plot1.R",local=TRUE)
pathtofile(plot1.R,local=TRUE)
pathtofile(plot1,local=TRUE)
source(pathtofile("plot1.R"),local=TRUE)
exit
quit
source(pathtofile("plot1.R"),local=TRUE)
swirl()
sample(colors(10))
sample(colors(),10)
pal<-colorRamp(c,("red","blue"))
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3<-colorRampPalette(c("blue","green"), alpha=0.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols<-brewer.pal(3,"BuGn")
cols
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg, color=drv)
qplot(displ,hwy,data=mpg, color=drv, geom=c("point","smooth"))
qplot(hwy,data=mpg,color=drv)
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=~drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy,data=mpg,facets=.~drv,binwidth=2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
g<-ggplot(mpg,displ~hwy)
g<-ggplot(aes()mpg,displ~hwy)
g<-ggplot(aes((mpg,displ~hwy)
g<-ggplot(aes(mpg,displ~hwy))
g<-ggplot(mpg,displ~hwy)
g<-ggplot(mpg, aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geo_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(col="pink",size=4,alpha=.5)
g+geom_point(col="pink",size=4,alpha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2)+aes(color=.~drv)
g+geom_point(size=4,alpha=1/2)+aes(color=drv)
g+geom_point(aes(color=drv),size=4,alpha=1/2)
g+geom_point(aes(color=drv),size=4,alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=4,alpha=1/2)+geom_smooth(size=4,lty=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv),size=4,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) +
| geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) +geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(testdat$myx,testdat$myy,type="l",ylim=c(-3,3))
plot(testdat$myy,testdat$myx,type="l",ylim=c(-3,3))
plot(testdat$myy,testdat$myx,type="l",ylim=c(-3,3))
plot(testdat$myy,testdat$myx,type="l",ylim=c(-3,3))
plot(testdat$myy,testdat$myy,type="l",ylim=c(-3,3))
plot(testdat$myx,testdat$myy,type="l",ylim=c(-3,3))
plot(testdat$myx,testdat$myy,type="l",xlim=c(-3,3))
plot(testdat$myx,testdat$myy,type="l",xlim=c(-3,3),ylim=c(-3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage,title="Swirl Rules!"")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage,title="Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm",facets=.~cut)
g<=ggplot(diamonds,aes(x=depth,y=rpice))
g<=ggplot(diamonds,aes(x=depth,y=price))
g<-ggplot(diamonds,aes(x=depth,y=price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(x=depth,y=price))
g+geom_point(alpha=1/3+facet_grid(cut~car2))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,.]
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
6
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=19,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmobj$iter
kmObj$iter
plot(x,y,col=km0bj$cluster,pch=19,cex=2)
plot(x,y,col= kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=keamns(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
0
library(dplyr)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
mod_SCC <- tbl_df(SCC)
Coal_df <- filter(mod_SCC, grepl("Coal",as.character(Short.Name)))
View(Coal_df)
View(Coal_df)
sub_NEI <- subset(NEI, NEI$SCC %in% Coal_df$SCC)
View(sub_NEI)
NEI_Coal <- subset(NEI, NEI$SCC %in% Coal_df$SCC)
Tot_emission <- tapply(NEI_Coal$Emission, NEI_Coal$year,sum)
plot(Tot_emission, unique(NEI$year))
plot(Tot_emission~ unique(NEI$year))
?barplot
barplot(Tot_emission ~ unique(NEI$year))
plot(NEI$year)
dev.cur()
library(dplyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
source('~/Q4.R', echo=TRUE)
qplot(y=Tot_emission,y=unique(NEI$year))
plot(Tot_emission,unique(NEI$year))
source('~/.active-rstudio-document', echo=TRUE)
source('~/Q4.R', echo=TRUE)
?plot
source('~/Q4.R', echo=TRUE)
dev.curr()
dev.cur()
dev.off()
source('~/Q4.R', echo=TRUE)
source('~/Q4.R', echo=TRUE)
?pch
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
View(SCC
)
Vehicle_df <- filter(mod_SCC, grepl("Mobile",as.character(Short.Name)))
View(Vehicle_df)
Vehicle_df <- filter(mod_SCC, grepl("Mobile",as.character(EI.Sector)))
Vehicle_df_2 <- filter(mod_SCC, grepl("On-Road",as.character(EI.Sector)))
View(Vehicle_df_2)
View(Vehicle_df)
Vehicle_df_3 <- filter(mod_SCC, grepl("On-Road" & "Mobile",as.character(EI.Sector)))
Vehicle_df_3 <- filter(mod_SCC, grepl("On-Road" && "Mobile",as.character(EI.Sector)))
Vehicle_df_3 <- filter(mod_SCC, grepl("Mobile - On-Road",as.character(EI.Sector)))
Vehicle_df <- filter(mod_SCC, grepl("Mobile - On-Road",as.character(EI.Sector)))
NEI_Veh <- subset(NEI, NEI$SCC %in% Vehicle_df$SCC)
NEI_Veh_Bal <-subset(NEI_Veh, NEI_Veh$fips == "24510")
Tot_emission <-tapply(NEI_Veh_Bal$Emission, NEI_Veh_Bal$year, sum)
source('~/Q5.R', echo=TRUE)
NEI_Veh_fil <-subset(NEI_Veh, NEI_Veh$fips %in% c("24510","06037")
)
NEI_Veh_Bal1 <-subset(NEI_Veh, NEI_Veh$fips %in% c("24510"))
NEI_Veh_fil <-tbl_df(NEI_Veh_fil)
NEI_Veh_fil <-group(NEI_Veh_fil,fips)
NEI_Veh_fil <-group_by(NEI_Veh_fil,fips)
Q5 <-summarise(NEI_vel_fil,total_emission = sum(Emission))
Q5 <-summarise(NEI_Vel_fil,total_emission = sum(Emission))
Q5 <-summarise(NEI_Veh_fil,total_emission = sum(Emission))
View(NEI_Veh_fil)
Q5 <-summarise(NEI_Veh_fil,total_emission = sum(Emissions))
View(`Q5`)
View(`Q5`)
NEI_Veh_fil <-group_by(NEI_Veh_fil,fips,year)
Q5 <-summarise(NEI_Veh_fil,total_emission = sum(Emissions))
View(`Q5`)
source('~/.active-rstudio-document', echo=TRUE)
NEI_Veh_fil <-tbl_df(NEI_Veh_fil)
NEI_Veh_fil <-group_by(NEI_Veh_fil,fips,year) #Grouped by cities and Years
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
NEI_Veh_fil <- tbl_df(NEI_Veh_fil)
source('~/.active-rstudio-document', echo=TRUE)
View(`Q5`)
View(`Q5`)
g <-ggplot(Q5, aes(x=year,y=total_emission))
g+geom_point()
g+geom_point()+facet_grid(.~fips)
g <-ggplot(Q5, aes(total_emission))
g+geom_bar()
g <-ggplot(Q5, aes(year))
g+geom_bar()
g <-ggplot(Q5, aes(x=year,y=total_emission))+facet_grid(.~fips)
g
g <-ggplot(Q5, aes(x=year,y=total_emission))+
geom_point()+
facet_grid(.~fips)
g
g <-ggplot(Q5, aes(x=year,y=total_emission))+
geom_bar(stat="identity")+
facet_grid(.~fips)
g
?aggregate
NEI_veh_fil$fips[NEI_veh_fil$fips=="24510"] <-"Baltimore, MD"
NEI_veh_fil$fips[NEI_veh_fil$fips=="06037"] <-"Los Angeles, CA"
NEI_Veh_fil$fips[NEI_Veh_fil$fips=="24510"] <-"Baltimore, MD"
NEI_Veh_fil$fips[NEI_Veh_fil$fips=="06037"] <-"Los Angeles, CA"
View(NEI_Veh_fil)
View(`Q5`)
source('~/Q6.R', echo=TRUE)
View(`Q6`)
View(`Q6`)
source('~/Q6.R', echo=TRUE)
source('~/Q6.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Q6.R', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source('~/Q6.R', echo=TRUE)
barplot(y=Tot_emission,x=unique(NEI_Veh_Bal$year))
?barplot
barplot(Tot_emission)
g <- ggplot(Tot_emission,aes(Tot_emission))
png(file = "plot5.png", height = 480, width = 480)
barplot(Tot_emission,
col = "blue",
pch = 16,
lwd = 10,
xlab = "Year",
ylab = "Total Emission PM2.5",
main = "Total emission by motor vehicle in Baltimore")
png(file = "plot5.png", height = 480, width = 480)
barplot(Tot_emission,
col = "blue",
pch = 16,
lwd = 10,
xlab = "Year",
ylab = "Total Emission PM2.5",
main = "Total emission by motor vehicle in Baltimore")
dev.cur()
dev.off()
png(file = "plot5.png", height = 480, width = 480)
barplot(Tot_emission,
col = "blue",
pch = 16,
lwd = 10,
xlab = "Year",
ylab = "Total Emission PM2.5",
main = "Total emission by motor vehicle in Baltimore")
dev.cur()
dev.off()
dev.off()
dev.off()
dev.off()
barplot(Tot_emission,
col = "blue",
pch = 16,
lwd = 10,
xlab = "Year",
ylab = "Total Emission PM2.5",
main = "Total emission by motor vehicle in Baltimore")
barplot(Tot_emission,
col = "blue",
pch = 16,
lwd = 1,
xlab = "Year",
ylab = "Total Emission PM2.5",
main = "Total emission by motor vehicle in Baltimore")
barplot(Tot_emission,
col = "blue",
pch = 16,
lwd = 1,
xlab = "Year",
ylab = "Total Emission PM2.5",
ylim = c(0,400),
main = "Total emission by motor vehicle in Baltimore")
barplot(Tot_emission,
col = "black",
pch = 1,
lwd = 1,
xlab = "Year",
ylab = "Total Emission PM2.5 (Tons)",
main = "Total emission by motor vehicle in Baltimore")
?barplot
source('~/Q5.R', echo=TRUE)
source('~/Q4.R', echo=TRUE)
source('~/Q4.R', echo=TRUE)
source('~/Q4.R', echo=TRUE)
source('~/Q4.R', echo=TRUE)
source('~/Q4.R', echo=TRUE)
source('~/plot5.R', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source('~/Q3.R', echo=TRUE)
source('~/Q3.R', echo=TRUE)
source('~/Q2.R', echo=TRUE)
source('~/Q2.R', echo=TRUE)
source('~/Q2.R', echo=TRUE)
source('~/Q1.R', echo=TRUE)
source('~/Q1.R', echo=TRUE)
dev.off()
dev.off()
source('~/Q1.R', echo=TRUE)
source('~/Q1.R', echo=TRUE)
source('~/Q1.R', echo=TRUE)
source('~/Q1.R', echo=TRUE)
source('~/Q1.R', echo=TRUE)
source('~/Q1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?axis
source('~/Q1.R', echo=TRUE)
source('~/Q1.R', echo=TRUE)
source('~/plot4.R', echo=TRUE)
setwd("~/Data Science/RepData_PeerAssessment1")
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
?strptime
dup_data <- data
dup_data$date <- strptime(as.character(dup_data$date), "%y-%m-%d")
View(dup_data)
dup_data <- data
View(dup_data)
str(dup_data)
dup_data$date <- as.character(dup_data$date)
str(dup_data)
dup_data$date <- strptime(as.character(dup_data$date), "%Y-%m-%d")
View(dup_data)
str(dup_data)
days <- weekdays(dup_data$date)
View(days)
str(days)
table(days)
type <- character()
day_type <- character()
for (i in 1:length(days)) {
if (days[i] == "Sunday" | days[i] == "Saturday")
day_type[i] <- "weekend"
else day_type[i] <- "weekday"
}
View(day_type)
?cbind
dup_data <- cbind(dup_data, days, weekday)
dup_data <- cbind(dup_data, days, day_type)
View(dup_data)
_newsteps_interval <- aggregate(steps ~ c(interval, day_type), data = data, mean)
newsteps_interval <- aggregate(steps ~ c(interval, day_type), data = dup_data, mean)
new_steps_interval <- aggregate(steps ~ interval + day_type), data = dup_data, mean)
new_steps_interval <- aggregate(steps ~ interval + day_type, data = dup_data, mean)
View(new_steps_interval)
